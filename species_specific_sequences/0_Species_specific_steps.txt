cd /nfs/brubeck.bx.psu.edu/scratch6/rahul/Palindrome/analysis/species_specific
source activate /galaxy/home/biomonika/conda/GApy2.7

#Obtain the Y alignment ancestor specific:

mkdir msa
cd msa
#Human specific
ln -s /nfs/brubeck.bx.psu.edu/scratch6/makova_lab/projects/active/Y_Chromosome/Great_Ape_Y_chromosomes/Y_Alignments/analysis/cactus_5way.20191126/alignment.Anc0_centric.20191126.maf.gz .

ln -s /nfs/brubeck.bx.psu.edu/scratch6/makova_lab/projects/active/Y_Chromosome/Great_Ape_Y_chromosomes/Y_Alignments/analysis/cactus_5way.20191126/alignment.panPan_Y_centric.20191126.maf.gz .
ln -s /nfs/brubeck.bx.psu.edu/scratch6/makova_lab/projects/active/Y_Chromosome/Great_Ape_Y_chromosomes/Y_Alignments/analysis/cactus_5way.20191126/alignment.gorGor_Y_centric.20191126.maf.gz  .
ln -s /nfs/brubeck.bx.psu.edu/scratch6/makova_lab/projects/active/Y_Chromosome/Great_Ape_Y_chromosomes/Y_Alignments/analysis/cactus_5way.20191126/alignment.ponAbe_Y_centric.20191126.maf.gz .


#Bob's pipeline generated the species specific files as a byproduct: https://github.com/makovalab-psu/great-ape-Y-evolution/tree/master/alignment/multiple

gzip -dc fiveY.${S1}_Y_centric.maf.gz \
  | maf_filter_by_species_set --species=${S1}_Y \
  | grep ${S1}_Y \
  | awk '{
         if ($5 == "+") print $2,$3,$3+$4;
         else           print $2,$6-($3+$4),$6-$3;
         }' \
  | sed "s/^${S1}_Y\.//" \
  | genodsp --novalue --uncovered:hide --nooutputvalue \
      --chromosomes=${S1}_Y.lengths \
      = mask ${S1}_Y.N_intervals


Bob put the intervals in
/nfs/brubeck.bx.psu.edu/scratch5/rsharris/ape_chry_alignment/analysis/cactus_5way.20191126/alignment.${S}_Y_centric.20191126.maf.${S}_Y_specific.bed
where ${S} is, e.g. "panPan".

ln -s /nfs/brubeck.bx.psu.edu/scratch5/rsharris/ape_chry_alignment/analysis/cactus_5way.20191126/alignment.gorGor_Y_centric.20191126.maf.gorGor_Y_specific.bed .
ln -s /nfs/brubeck.bx.psu.edu/scratch5/rsharris/ape_chry_alignment/analysis/cactus_5way.20191126/alignment.panPan_Y_centric.20191126.maf.panPan_Y_specific.bed .
ln -s /nfs/brubeck.bx.psu.edu/scratch5/rsharris/ape_chry_alignment/analysis/cactus_5way.20191126/alignment.ponAbe_Y_centric.20191126.maf.ponAbe_Y_specific.bed .

#Filter out windows smaller than 100bp
awk '{ if (($3-$2)>=100 )print $0}' alignment.ponAbe_Y_centric.20191126.maf.ponAbe_Y_specific.bed >alignment.ponAbe_Y_centric.20191126.maf.ponAbe_Y_specific_gt100bp.bed
awk '{ if (($3-$2)>=100 )print $0}' alignment.gorGor_Y_centric.20191126.maf.gorGor_Y_specific.bed >alignment.gorGor_Y_centric.20191126.maf.gorGor_Y_specific_gt100bp.bed
awk '{ if (($3-$2)>=100 )print $0}' alignment.panPan_Y_centric.20191126.maf.panPan_Y_specific.bed >alignment.panPan_Y_centric.20191126.maf.panPan_Y_specific_gt100bp.bed



##Goto BAM file steps

#Uncompress the files
gunzip < alignment.Anc0_centric.20191126.maf.gz > alignment.Anc0_centric.20191126.maf

###Add header if missing
vim alignment.Anc0_centric.20191126.maf

##maf version=1 scoring=none
# generated by cactus

cd ..


ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Bonobo_Y/analysis/palindrome/palindrome_coverage/PythoBob/ .

###############################################################################################################################################################################

########Orangutan_Y
#Coverage
mkdir bam
cd bam
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Orangutan_Y/analysis/BWA_align/orangutanWGS_msY_ver3.GCcorrected.bam .
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Orangutan_Y/analysis/BWA_align/orangutanWGS_msY_ver3.GCcorrected.bam.bai .
samtools idxstats orangutanWGS_msY_ver3.GCcorrected.bam | cut -f 1-2 > Orangutan_chromosomes.txt

cd ..

bedtools sort -faidx bam/Orangutan_chromosomes.txt -i alignment.ponAbe_Y_centric.20191126.maf.ponAbe_Y_specific_gt100bp.bed > ponAbe_Y_specific_sequence_100bp_block_sorted.bed
bedtools coverage -b bam/orangutanWGS_msY_ver3.GCcorrected.bam -a  ponAbe_Y_specific_sequence_100bp_block_sorted.bed -g bam/Orangutan_chromosomes.txt -sorted > Coverage_orangutan_msY_WGS_species_specific.bed

#############################################################################################################################################################################

########Bonobo_Y
#Coverage
mkdir bam
cd bam
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Bonobo_Y/analysis/BWA_align/bonoboWGS_msY_ver1.GCcorrected.bam .
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Bonobo_Y/analysis/BWA_align/bonoboWGS_msY_ver1.GCcorrected.bam.bai .
samtools idxstats bonoboWGS_msY_ver1.GCcorrected.bam | cut -f 1-2 > Bonono_chromosomes.txt

cd ..

bedtools sort -faidx bam/Bonono_chromosomes.txt -i alignment.panPan_Y_centric.20191126.maf.panPan_Y_specific_gt100bp.bed > panPan_Y_specific_sequence_100bp_block_sorted.bed
bedtools coverage -b bam/bonoboWGS_msY_ver1.GCcorrected.bam -a  panPan_Y_specific_sequence_100bp_block_sorted.bed -g bam/Bonono_chromosomes.txt -sorted > Coverage_bonobo_msY_WGS_species_specific.bed


##########################################################################################################################################################################
#
########Gorilla_Y
#Coverage
mkdir bam
cd bam
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/BWA_align/new/gorillaWGS_msY_ver3.GCcorrected.bam gorillaWGS_inLab_msY_ver3.GCcorrected.bam
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/BWA_align/new/gorillaWGS_msY_ver3.GCcorrected.bam.bai gorillaWGS_inLab_msY_ver3.GCcorrected.bam.bai

#Public dataset
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/BWA_align/gorillaWGS_msY_ver3.GCcorrected.bam .
ln -s /nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/BWA_align/gorillaWGS_msY_ver3.GCcorrected.bam.bai .

samtools idxstats gorillaWGS_inLab_msY_ver3.GCcorrected.bam | cut -f 1-2 > Gorilla_chromosomes.txt

cd ..

bedtools sort -faidx bam/Gorilla_chromosomes.txt -i alignment.gorGor_Y_centric.20191126.maf.gorGor_Y_specific_gt100bp.bed > gorGor_Y_specific_sequence_100bp_block_sorted.bed
bedtools coverage -b bam/gorillaWGS_inLab_msY_ver3.GCcorrected.bam -a  gorGor_Y_specific_sequence_100bp_block_sorted.bed -g bam/Gorilla_chromosomes.txt -sorted > Coverage_gorilla_msY_WGS_inlab_species_specific.bed


#####PLOT
R

sspOR=read.table("Coverage_orangutan_msY_WGS_species_specific.bed", sep="\t", stringsAsFactors=F, header=F)
sspBO=read.table("Coverage_bonobo_msY_WGS_species_specific.bed", sep="\t", stringsAsFactors=F, header=F)
sspGO=read.table("Coverage_gorilla_msY_WGS_inlab_species_specific.bed", sep="\t", stringsAsFactors=F, header=F)
XDGor=read.table("/nfs/brubeck.bx.psu.edu/scratch6/rahul/Orangutan_Y/analysis/palindrome/human/gcCor_results/Coverage_orangutan_msY_WGS_XDG_80per.bed", sep="\t", stringsAsFactors=F, header=F)
XDGbo=read.table("/nfs/brubeck.bx.psu.edu/scratch6/rahul/Bonobo_Y/analysis/palindrome/human/gcCor_results/Coverage_bonobo_msY_WGS_XDG_80per.bed", sep="\t", stringsAsFactors=F, header=F)
XDGgo=read.table("/nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/palindrome/human/gcCor_results/Coverage_gorilla_msY_WGS_XDG_80per.bed", sep="\t", stringsAsFactors=F, header=F)

#sspGO=read.table("Coverage_gorilla_msY_WGS_species_specific.bed", sep="\t", stringsAsFactors=F, header=F)
#XDGgo=read.table("/nfs/brubeck.bx.psu.edu/scratch6/rahul/Gorilla_Y/analysis/palindrome/human/gcCor_results_old/Coverage_gorilla_msY_WGS_XDG_80per.bed", sep="\t", stringsAsFactors=F, header=F)


get_coverage<-function(data_align){
return ((data_align$V4/data_align$V6)*250)
}

get_XDGcoverage<-function(data_align){
temp=data_align[which(data_align$V4<200 & data_align$V13 > 0.8),]
return ((temp$V10/temp$V12)*250)
}

get_CN<-function(coverage,XDG){
control=median(XDG)
temp=coverage/control
return (temp)
}

Or=get_coverage(sspOR)
Bo=get_coverage(sspBO)
Go=get_coverage(sspGO)
xO=get_XDGcoverage(XDGor)
xB=get_XDGcoverage(XDGbo)
xG=get_XDGcoverage(XDGgo)

CNOr=get_CN(Or,xO)
CNBo=get_CN(Bo,xB)
CNGo=get_CN(Go,xG)
CNxO=get_CN(xO,xO)
CNxB=get_CN(xB,xB)
CNxG=get_CN(xG,xG)

#No of blocks
length(CNBo)
length(CNGo)
length(CNOr)

#total size of the blocks
totBO=sum(sspBO$V6)
totGO=sum(sspGO$V6)
totOR=sum(sspOR$V6)

#No of blocks <2 CN
length(which(CNBo<2))
length(which(CNGo<2))
length(which(CNOr<2))

#Size of the blocks <1.33 CN
sum(sspBO$V6[which(CNBo<1.33)])
sum(sspGO$V6[which(CNGo<1.33)])
sum(sspOR$V6[which(CNOr<1.33)])



#No of blocks >1.33 & <=1.66 CN
length(which(CNBo>1.33 & CNBo<=1.66))
length(which(CNGo>=1.5))
length(which(CNOr>=1.5))

#Size of the blocks >1.33 & <=1.66 CN
sum(sspBO$V6[which(CNBo>1.33 & CNBo<=1.66)])
sum(sspGO$V6[which(CNGo>1.33 & CNGo<=1.66)])
sum(sspOR$V6[which(CNOr>1.33 & CNOr<=1.66)])


#No of blocks >1.66 & <=2.5 CN
length(which(CNBo>=1.75))
length(which(CNGo>=1.75))
length(which(CNOr>=1.75))

#Size of the blocks >1.66 & <=2.5 CN
sum(sspBO$V6[which(CNBo>1.66 & CNBo<=2.5)])
sum(sspGO$V6[which(CNGo>1.66 & CNGo<=2.5)])
sum(sspOR$V6[which(CNOr>1.66 & CNOr<=2.5)])


#No of blocks >=2 CN
length(which(CNBo>=2))
length(which(CNGo>=2))
length(which(CNOr>=2))

#Size of the blocks >2.5 CN
sum(sspBO$V6[which(CNBo>2.5)])
sum(sspGO$V6[which(CNGo>2.5)])
sum(sspOR$V6[which(CNOr>2.5)])




apply(sspOR,1,sum)

pdf('Fig_Species_specific_Orangutan_Bonobo_Gorilla.pdf', width=5, height=4)
boxplot(CNBo,CNxB,CNGo,CNxG,CNOr,CNxO,names=c("SSBo(N=4310)","XDGBo","SSGo(N=527)","XDGGo","SSOr(N=489)","XDGOr"), ylab="Copy number", main="Species specific >100bp",outline=FALSE,cex.axis=0.60)
abline(h=2, col='red')
abline(h=1,col='black')
dev.off()


